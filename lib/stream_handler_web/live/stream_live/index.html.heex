<.header>
  <h3 class="text-center text-2xl mb-3">Demo Concurrency Dashboard</h3>
</.header>
  <div class="grid grid-cols-3 gap-2 w-full place-items-stretch">

    <div class={get_class(@clicked_map, 1)}>
      <StreamHandlerWeb.DashboardComponents.slugs_card slugs={@slugs} />
    </div>

    <div class={get_class(@clicked_map, 2)}>
      <StreamHandlerWeb.DashboardComponents.emojis_card emojis={@emojis} />
    </div>

    <div class={get_class(@clicked_map, 3)}>
      <StreamHandlerWeb.DashboardComponents.activities_card activities={@activities} />
    </div>

    <div class={get_class(@clicked_map, 4)}>
      <StreamHandlerWeb.DashboardComponents.kraken_card streams={@streams} />
    </div>

    <div class="h-56 border-black border-4 p-8">
      <StreamHandlerWeb.SharedComponents.button_card clicked_map={@clicked_map} />
    </div>
  
    <div class={get_class(@clicked_map, 6)}>
      <StreamHandlerWeb.DashboardComponents.ets_card ets={@ets} />
    </div>

    <div class={get_class(@clicked_map, 7)}>
      <StreamHandlerWeb.DashboardComponents.streamer_card streamer_svg={@streamer_svg} />
    </div>

    <div class={get_class(@clicked_map, 8)}>
      <StreamHandlerWeb.DashboardComponents.reader_card reader={@reader} />
    </div>
    
    <div class={get_class(@clicked_map, 9)}>
      <StreamHandlerWeb.DashboardComponents.images_card images={@images} />
    </div>

  </div>

  <form id="upload-form" phx-submit="save" phx-change="validate">
    <.live_file_input upload={@uploads.avatar} />
    <button type="submit">Upload</button>
  </form>

  <section phx-drop-target={@uploads.avatar.ref}>

<%!-- render each avatar entry --%>
<%= for entry <- @uploads.avatar.entries do %>
  <article class="upload-entry">

    <figure>
      <.live_img_preview entry={entry} />
      <figcaption><%= entry.client_name %></figcaption>
    </figure>

    <%!-- entry.progress will update automatically for in-flight entries --%>
    <progress value={entry.progress} max="100"> <%= entry.progress %>% </progress>

    <%!-- a regular click event whose handler will invoke Phoenix.LiveView.cancel_upload/3 --%>
    <button type="button" phx-click="cancel-upload" phx-value-ref={entry.ref} aria-label="cancel">&times;</button>

    <%!-- Phoenix.Component.upload_errors/2 returns a list of error atoms --%>
    <%= for err <- upload_errors(@uploads.avatar, entry) do %>
      <p class="alert alert-danger"><%= error_to_string(err) %></p>
    <% end %>

  </article>
<% end %>

<%!-- Phoenix.Component.upload_errors/1 returns a list of error atoms --%>
<%= for err <- upload_errors(@uploads.avatar) do %>
  <p class="alert alert-danger"><%= error_to_string(err) %></p>
<% end %>

</section>

